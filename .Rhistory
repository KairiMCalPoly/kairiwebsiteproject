install.packages("vitae")
# Simulated engagement data
social_data <- data.frame(
Platform = c(rep("Twitter", 5), rep("TikTok", 5)),
Post_Type = rep(c("Meme", "Highlight", "Poll", "AMA", "Giveaway"), 2),
Engagement_Rate = c(3.2, 4.1, 1.8, 2.5, 5.0, 8.7, 9.2, 2.1, 4.3, 12.1)
)
# Plot
ggplot(social_data, aes(x = Post_Type, y = Engagement_Rate, fill = Platform)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Esports Content Engagement by Platform",
subtitle = "TikTok clips outperform Twitter posts by 2-3x",
x = "Post Type",
y = "Engagement Rate (%)"
) +
theme_minimal() +
scale_fill_manual(values = c("#1DA1F2", "#FF0050"))  # Twitter blue + TikTok red
# Load required package
library(ggplot2)
# Simulated engagement data
social_data <- data.frame(
Platform = c(rep("Twitter", 5), rep("TikTok", 5)),
Post_Type = rep(c("Meme", "Highlight", "Poll", "AMA", "Giveaway"), 2),
Engagement_Rate = c(3.2, 4.1, 1.8, 2.5, 5.0, 8.7, 9.2, 2.1, 4.3, 12.1)
)
# Plot
ggplot(social_data, aes(x = Post_Type, y = Engagement_Rate, fill = Platform)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Esports Content Engagement by Platform",
subtitle = "TikTok clips outperform Twitter posts by 2-3x",
x = "Post Type",
y = "Engagement Rate (%)"
) +
theme_minimal() +
scale_fill_manual(values = c("#1DA1F2", "#FF0050"))  # Twitter blue + TikTok red
# Simulated hourly engagement data
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16), 85, 95, 90, rep(60, 4))  # Peaks at 7â€“9 PM
)
# Simulated hourly engagement data (24 values)
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16),  # 1AM-4PM
60, 65, 70,                   # 5PM-7PM
85, 95, 90,                   # 8PM-10PM (peak)
rep(60, 4)                    # 11PM-2AM
)
# Plot
ggplot(time_data, aes(x = Hour, y = Engagement)) +
# Simulated hourly engagement data (24 values)
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16),  # 1AM-4PM
60, 65, 70,                   # 5PM-7PM
85, 95, 90,                   # 8PM-10PM (peak)
rep(60, 4)                    # 11PM-2AM
)
# Plot
ggplot(time_data, aes(x = Hour, y = Engagement)) +
# Load required library
library(ggplot2)
# Simulated hourly engagement data (24 values)
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16),  # 1AM-4PM
60, 65, 70,                   # 5PM-7PM
85, 95, 90,                   # 8PM-10PM (peak)
rep(60, 4)                    # 11PM-2AM
)
# Create the plot
engagement_plot <- ggplot(time_data, aes(x = Hour, y = Engagement)) +
# Load required library
library(ggplot2)
# Simulated hourly engagement data (24 values)
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16),  # 1AM-4PM
60, 65, 70,                   # 5PM-7PM
85, 95, 90,                   # 8PM-10PM (peak)
rep(60, 4)                    # 11PM-2AM
)
engagement_plot <- ggplot(time_data, aes(x = Hour, y = Engagement)) +
# Load required library
library(ggplot2)
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16),  # 1AM-4PM
60, 65, 70,                   # 5PM-7PM
85, 95, 90,                   # 8PM-10PM (peak)
rep(60, 4)                    # 11PM-2AM
)
engagement_plot <- ggplot(time_data, aes(x = Hour, y = Engagement)) +
# Load required library
library(ggplot2)
# Simulated hourly engagement data (24 values)
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16),  # 1AM-4PM
60, 65, 70,                   # 5PM-7PM
85, 95, 90,                   # 8PM-10PM (peak)
rep(60, 4)                    # 11PM-2AM
)
# Create the plot (fixed the extra parenthesis)
engagement_plot <- ggplot(time_data, aes(x = Hour, y = Engagement)) +  # Remove extra ) here
# Load required library
library(ggplot2)
# Simulated hourly engagement data (24 values)
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 16),  # 1AM-4PM
60, 65, 70,    # 5PM-7PM
85, 95, 90,    # 8PM-10PM (peak)
rep(60, 4))    # 11PM-2AM
)
library(ggplot2)
# Corrected data with 24 values for both Hour and Engagement
time_data <- data.frame(
Hour = 1:24,
Engagement = c(rep(50, 15),  # 1AM-3PM (15 hours)
60, 65, 70,                   # 4PM-6PM
85, 95, 90,                   # 7PM-9PM (peak)
rep(60, 3)                    # 10PM-12AM
)
# Create the plot
engagement_plot <- ggplot(time_data, aes(x = Hour, y = Engagement)) +
# Simulated hashtag data
hashtag_data <- data.frame(
Hashtag = c("#LeagueOfLegends", "#Esports", "#Gaming", "#LEC"),
Discoverability_Lift = c(40, 38, 15, 22)  # % increase
)
# Plot
ggplot(hashtag_data, aes(x = reorder(Hashtag, -Discoverability_Lift), y = Discoverability_Lift)) +
geom_col(fill = "#2196F3", width = 0.6) +
geom_text(aes(label = paste0(Discoverability_Lift, "%")), vjust = -0.5, size = 4) +
labs(
title = "Top-Performing Hashtags for Discoverability",
subtitle = "#LeagueOfLegends and #Esports drove 40% more impressions",
x = "",
y = "Discoverability Lift (%)"
) +
theme_minimal()
library(ggplot2)
library(dplyr)
library(tidyr)
# Simulated hashtag performance data across platforms
hashtag_data <- data.frame(
Hashtag = rep(c("#LeagueOfLegends", "#Esports", "#Gaming", "#LEC"), 3),
Platform = rep(c("TikTok", "Twitter", "Instagram"), each = 4),
Discoverability_Lift = c(
# TikTok performance
52, 48, 28, 35,
# Twitter performance
40, 38, 15, 22,
# Instagram performance
45, 42, 20, 30
)
)
# 1. Combined Platform Visualization
ggplot(hashtag_data, aes(x = reorder(Hashtag, -Discoverability_Lift),
y = Discoverability_Lift,
fill = Platform)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = paste0(Discoverability_Lift, "%")),
position = position_dodge(width = 0.9),
vjust = -0.5, size = 3) +
scale_fill_manual(values = c("#FF0050", "#1DA1F2", "#E1306C")) + # Platform colors
labs(
title = "Hashtag Performance Across Platforms",
subtitle = "#LeagueOfLegends dominates on TikTok (52% lift vs 40% on Twitter)",
x = "",
y = "Discoverability Lift (%)",
fill = "Platform"
) +
theme_minimal() +
theme(legend.position = "top")
# 2. Individual Platform Visualizations (Facets)
ggplot(hashtag_data, aes(x = reorder(Hashtag, -Discoverability_Lift),
y = Discoverability_Lift)) +
geom_col(fill = "#2196F3", width = 0.7) +
geom_text(aes(label = paste0(Discoverability_Lift, "%")),
vjust = -0.5, size = 3.5) +
facet_wrap(~Platform, nrow = 1) +
labs(
title = "Hashtag Performance by Platform",
subtitle = "TikTok shows highest potential for discoverability growth",
x = "",
y = "Discoverability Lift (%)"
) +
theme_minimal() +
theme(strip.text = element_text(face = "bold"))
# 3. Platform Comparison Heatmap
ggplot(hashtag_data, aes(x = Platform, y = Hashtag, fill = Discoverability_Lift)) +
geom_tile(color = "white", size = 0.5) +
geom_text(aes(label = paste0(Discoverability_Lift, "%")), color = "white", size = 4) +
scale_fill_gradient(low = "#3F51B5", high = "#FF4081") +
labs(
title = "Hashtag Effectiveness Heatmap",
x = "",
y = "",
fill = "Lift (%)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
# Simulated ad performance data
ad_data <- data.frame(
Placement = c("Main Menu", "Post-Match", "Inventory", "Loading Screen"),
CTR = c(22, 15, 8, 4),
Drop_Off_Rate = c(15, 28, 42, 50)
)
# Plot
ggplot(ad_data, aes(x = reorder(Placement, -CTR), y = CTR)) +
geom_col(fill = "#00B0F0") +
geom_text(aes(label = paste0(CTR, "%")), vjust = -0.5) +
labs(
title = "In-Game Ad Click-Through Rates (CTR)",
subtitle = "Main menu ads perform best, but avoid loading screens",
x = "Ad Placement",
y = "CTR (%)"
) +
theme_minimal()
# Simulated survey data
fgc_data <- data.frame(
Feature = c("Prize Pool", "Stream Quality", "Venue", "Game Variety", "Schedule"),
Importance = c(68, 92, 85, 78, 89)  # % ranking as "Very Important"
)
# Plot
ggplot(fgc_data, aes(x = reorder(Feature, Importance), y = Importance)) +
geom_segment(aes(xend = Feature, yend = 0), color = "#E63946") +
geom_point(size = 5, color = "#E63946") +
coord_flip() +
labs(
title = "FGC Tournament Priorities",
subtitle = "Stream quality > prize money for viewers",
x = "",
y = "% Ranking as 'Very Important'"
) +
theme_minimal()
library(ggplot2)
library(scales)
# Tournament preference data
pref_data <- data.frame(
Day = c("Friday", "Saturday", "Sunday", "Weekdays"),
Percent = c(32, 36, 18, 14),  # Sums to 100%
Highlight = c(TRUE, TRUE, FALSE, FALSE)
)
# Create visualization
ggplot(pref_data, aes(x = reorder(Day, -Percent), y = Percent, fill = Highlight)) +
geom_col(width = 0.7) +
geom_text(aes(label = paste0(Percent, "%")),
vjust = -0.5, size = 5, fontface = "bold") +
scale_fill_manual(values = c("#E0E0E0", "#FF5722")) +
scale_y_continuous(limits = c(0, 40), labels = percent_format(scale = 1)) +
annotate("text", x = 1.5, y = 38,
label = "68% prefer weekend tournaments",
size = 5, color = "#FF5722", fontface = "bold") +
labs(
title = "FGC Tournament Day Preferences",
subtitle = "Friday/Saturday events attract significantly more participants",
x = "",
y = "Preference (%)",
caption = "Based on survey of 500+ FGC members"
) +
theme_minimal(base_size = 12) +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 16),
panel.grid.major.x = element_blank(),
axis.text = element_text(size = 11)
)
library(ggplot2)
library(scales)
# Tournament preference data
pref_data <- data.frame(
Day = factor(c("Friday", "Saturday", "Sunday", "Weekdays"),
levels = c("Friday", "Saturday", "Sunday", "Weekdays")),
Percent = c(32, 36, 18, 14),  # Sums to 100%
Highlight = c(TRUE, TRUE, FALSE, FALSE)
)
# Create visualization with adjusted text positions
ggplot(pref_data, aes(x = Day, y = Percent, fill = Highlight)) +
geom_col(width = 0.7, alpha = 0.9) +
# Text labels with conditional positioning
geom_text(aes(y = ifelse(Percent > 30, Percent - 5, Percent + 2),
label = paste0(pref_data$Percent, "%"),
size = 5,
fontface = "bold",
color = ifelse(pref_data$Highlight, "white", "black")) +
scale_fill_manual(values = c("#E0E0E0", "#FF5722")) +
scale_y_continuous(limits = c(0, 40), expand = c(0, 0)) +
annotate("text",
x = 2.5,
y = 35,
label = "68% prefer weekend tournaments",
size = 5.5,
color = "#FF5722",
fontface = "bold") +
labs(
title = "FGC Tournament Day Preferences",
subtitle = "Friday/Saturday events attract significantly more participants",
x = "",
y = "",
caption = "Based on survey of 500+ FGC members"
) +
theme_minimal(base_size = 14) +
theme(
legend.position = "none",
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.text.x = element_text(size = 12),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
# Simulated survey data
fgc_data <- data.frame(
Feature = c("Prize Pool", "Stream Quality", "Venue", "Game Variety", "Schedule"),
Importance = c(68, 92, 85, 78, 89)  # % ranking as "Very Important"
)
# Plot
ggplot(fgc_data, aes(x = reorder(Feature, Importance), y = Importance)) +
geom_segment(aes(xend = Feature, yend = 0), color = "#E63946") +
geom_point(size = 5, color = "#E63946") +
coord_flip() +
labs(
title = "FGC Tournament Priorities",
subtitle = "Stream quality > prize money for viewers",
x = "",
y = "% Ranking as 'Very Important'"
) +
theme_minimal()
library(ggplot2)
# Simulated survey data
fgc_data <- data.frame(
Feature = c("Prize Pool", "Stream Quality", "Venue", "Game Variety", "Schedule"),
Importance = c(68, 92, 85, 78, 89)  # % ranking as "Very Important"
)
# Plot
ggplot(fgc_data, aes(x = reorder(Feature, Importance), y = Importance)) +
geom_segment(aes(xend = Feature, yend = 0), color = "#E63946") +
geom_point(size = 5, color = "#E63946") +
coord_flip() +
labs(
title = "FGC Tournament Priorities",
subtitle = "Stream quality > prize money for viewers",
x = "",
y = "% Ranking as 'Very Important'"
) +
theme_minimal()
library(ggplot2)
# Simulated ad performance data
ad_data <- data.frame(
Placement = c("Main Menu", "Post-Match", "Inventory", "Loading Screen"),
CTR = c(22, 15, 8, 4),
Drop_Off_Rate = c(15, 28, 42, 50)
)
# Plot
ggplot(ad_data, aes(x = reorder(Placement, -CTR), y = CTR)) +
geom_col(fill = "#00B0F0") +
geom_text(aes(label = paste0(CTR, "%")), vjust = -0.5) +
labs(
title = "In-Game Ad Click-Through Rates (CTR)",
subtitle = "Main menu ads perform best, but avoid loading screens",
x = "Ad Placement",
y = "CTR (%)"
) +
theme_minimal()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
if (!requireNamespace(c("tinytex","vitae","tibble"), quietly = TRUE)) {
install.packages(c("tinytex","vitae","tibble"))
}
if (Sys.which("pdflatex") == "" && !tinytex::is_tinytex()) {
message("â–º TinyTeX not found â€“ installing")
tinytex::install_tinytex()
} else {
message("âœ“ LaTeX present â€“ no installation needed.")
}
library(vitae)
library(tibble)
tribble(
~ Degree, ~ Year, ~ College, ~ Institution,
"Bachelors of Marketing Management", "2022 â€“ Expected Graduation 2026", "Business Administration", "California State Polytechnic University, Pomona"
) %>%
detailed_entries(Degree, Year, College, Institution)
tribble(
~ Years, ~ Company, ~ Duties, ~ Title,
"Month YYYY â€“ Month YYYY", "Company or Organization Name",
list(
"Summarize responsibility or achievement \\#1.",
"Highlight tools, technologies, or methods used.",
"Mention metrics, goals, or impact if possible.",
"Add communication or leadership responsibilities here."
),
"Job Title",
"Month YYYY â€“ Month YYYY", "Another Company or Team",
list(
"Led a project or team focused on [insert focus].",
"Collaborated cross-functionally with [departments/roles].",
"Managed content, campaigns, or dashboards.",
"Contributed to strategic planning or reporting."
),
"Job Title"
) %>%
detailed_entries(
what = Title,
when = Years,
with = Company,
why = Duties
)
tribble(
~ Years, ~ Company, ~ Duties, ~ Title,
"September 2024 â€“ Present", "Bronco Esports",
list(
"Directed themes and coordinated media production for large-scale in-person Esports eventsâ€“FragFestâ€“that results in 400+ attendees. ",
"Worked cross-functionally with Esports organizations like **Gen. G** and the marketing team, to develop creative promotional content from social events, generating tangible media that effectively boosted community engagement.",
"Wrote engaging creative and informative copy for Discord announcements, Instagram, and Twitter, effectively promoting events and tournaments.",
"Conceptualized and executed League of Legends-related social events such as in-houses, watch parties, and competitive tournaments, fostering community engagement in online and in-person settings. ",
"Designed **20+** promotional graphics advertising club events that reinforced and enhanced the Bronco Esports brand identity.",
"Assessed engagement from all Bronco Esports social media platforms to refine marketing strategies and event planning."
),
"Marketing Lead",
"February 2023 â€“ Present", "Bronco Esports",
list(
"Led initiatives to grow the Bronco Esports League of Legends community with monthly social events/campaigns for over **150+** members.",
"Optimized the Bronco Esports LoL Hub Discord server by restructuring roles and redesigning sections with an aesthetically pleasing design, improving navigation for new and existing users. ",
"Consistently communicated efficiently with club members, participants, and attendees in-person and online helping events/campaigns run smoothly.",
"Directed marketing strategies that enhanced community engagement with exclusive Discord server roles and prizes for social event/campaign participants.",
"Frequently monitored and reported on competitor Esports club activities and Discord server operations identifying opportunities to improve engagement and event quality."
),
"League of Legends Community Manager"
) %>%
detailed_entries(
what = Title,
when = Years,
with = Company,
why = Duties
)
tribble(
~ Years, ~ Company, ~ Duties, ~ Title,
"September 2024 â€“ Present", "Bronco Esports",
list(
"Directed themes and coordinated media production for large-scale in-person Esports eventsâ€“FragFestâ€“that results in 400+ attendees. ",
"Worked cross-functionally with Esports organizations like **Gen. G** and the marketing team, to develop creative promotional content from social events, generating tangible media that effectively boosted community engagement.",
"Wrote engaging creative and informative copy for Discord announcements, Instagram, and Twitter, effectively promoting events and tournaments."
),
"Marketing Lead",
) %>%
detailed_entries(
what = Title,
when = Years,
with = Company,
why = Duties
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
if (!requireNamespace(c("tinytex","vitae","tibble"), quietly = TRUE)) {
install.packages(c("tinytex","vitae","tibble"))
}
if (Sys.which("pdflatex") == "" && !tinytex::is_tinytex()) {
message("â–º TinyTeX not found â€“ installing")
tinytex::install_tinytex()
} else {
message("âœ“ LaTeX present â€“ no installation needed.")
}
library(vitae)
library(tibble)
